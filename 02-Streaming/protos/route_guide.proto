syntax = "proto3";

package routeguide;

// Interface exported by the server 
service RouteGuide {
    rpc GetFeature(Point) returns (Feature) {}

    // server-to-client
    rpc ListFeatures(Rectangle) returns (stream Feature) {}

    // client-to-serer  streaming RPC
    rpc RecordRoute(stream Point) returns (RouteSummary) {}

    // bi-directional streaming RPC
    // accept stream of RouteNotes sent while "a route is being traversed"
    // while receiving other RouteNotes (e.g. From other users)
    rpc RouteChat(stream RouteNote) returns (stream RouteNote) {}
}

message Point {
    int32 lat = 1;
    int32 lng = 2;
}

// a lat-lng rectangle
// points "lo" & "hi"
message Rectangle {
    // one corner of the rectangle
    Point lo = 1;
    // the other corner 
    Point hi = 2;
}

// A feature names something at a given point
// If a feature could not be named, the name is empty
message Feature {
    // name of the feature
    string name = 1;

    // point where the feature is detected
    Point location = 2;
}

message RouteNote {
    // location from which the message is sent
    Point location = 1;

    // message to be sent
    string message = 2;
}

message RouteSummary {
    int32 point_count = 1;
    int32 feature_count = 2;
    int32 distance = 3;
    int32 elapsed_time = 4;
}